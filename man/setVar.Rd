% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setVar.R
\docType{methods}
\name{setVar}
\alias{setVar}
\alias{setVar,StQ,DD-method}
\alias{setVar,StQList,DD-method}
\title{Method to set values of a variable.}
\usage{
setVar(object, newDD, DDslot = "MicroData", Value, lag = NULL, by = NULL)

\S4method{setVar}{StQ,DD}(object, newDD, DDslot = "MicroData", Value,
  lag = NULL, by = NULL)

\S4method{setVar}{StQList,DD}(object, newDD, DDslot = "MicroData", Value,
  lag = NULL, by = NULL)
}
\arguments{
\item{object}{Object in which to include the new variable.}

\item{newDD}{\linkS4class{DD} object with the information of the new variable
needed for the slot \code{DD} of the input object.}

\item{DDslot}{Character vector of length 1 with the name of the slot of newDD
in which the new variable is defined. Its default value is \code{MicroData}.}

\item{Value}{Vector of length the number of statistical units in the input
object with the values of the new variable for each of these units or
alternatively an object of class \code{\link{expression}} with a mathematical
 formula for the computation of these values.}

\item{lag}{Integer vector of length 1 with the lag to use when the input
object is of class \linkS4class{StQList}.}

\item{by}{Character vector with the names of the variables specifying those
statistical units groups under which the mathematical formula will be
applied.}
}
\value{
Object of the same class as the input object with the new variable
included.
}
\description{
\code{setVar} sets the values of a variable in the input object.

This method creates a variable with the name \code{VarName} with values
specified in the input \code{Value}. If the variable is already present in
the input variable, the method overwrites it.

It is also necessary to provide as input parameter an object of class
\linkS4class{DD} named \code{DDnl} with the row corresponding to the variable
set with this method to be included in the slot \code{DD}. This row is
specified as a \linkS4class{DDdt} with a single row and columns Variable,
Sort, Class, Qual1-Qualn (as many as so many qualifiers are necessary) and
ValueRegExp.

Input parameters \code{by} and \code{lag} are optional and specify how to
compute the values of the new variable in some circunstamces.
}
\examples{
library(data.table)
data(ExampleStQ)
newVNCVar <- new(Class = 'VNCdt',
                 data.table(IDQual = '', NonIDQual = '', IDDD = 'lTurnover',
                            UnitName = '', InFiles = 'FF'))
newVNC <- BuildVNC(list(MicroData = newVNCVar))
newDD <- new(Class = 'DD',
             VarNameCorresp = newVNC, 
             MicroData = new(Class = 'DDdt',
                             data.table(Variable = 'lTurnover',
                                        Sort = 'IDDD',
                                        Class = 'numeric',
                                        Length = '10',
                                        Qual1 = 'ID',
                                        ValueRegExp = '')))
NewQ <- setVar(object = ExampleStQ,
               newDD = newDD,
               DDslot = 'MicroData',
               Value = expression(log(1 + as.numeric(Turnover))))
getVar(NewQ, 'lTurnover')

}

